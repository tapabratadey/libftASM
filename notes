gcc will optimize .c files to .s files and then to object files and then link them
registries are small slots that lets you save things
System calls are APIs for the interface between the user space and the kernel space
Take the following steps to use sys calls:
-Put the system call number in the EAX register.
-Store the arguments to the system call in the registers EBX, ECX, etc.
-Call the relevant interrupt (80h).
-The result is usually returned in the EAX register.

• bzero	  (done)
• strcat
• isalpha (done)
• isdigit (done)
• isalnum (done)
• isascii (done)
• isprint (done)
• toupper (done)
• tolower (done)
• puts 	  (done)	
• strlen  (done)
• memset  (done)
• memcpy
• strdup 
• cat
bonus:
5 more functions



SRCDIR := src
BINDIR := bin

SRCS := $(wildcard $(SRCDIR)/*.s)
OBJS := $(patsubst $(SRCDIR)/%.s, $(BINDIR)/%.o, $(SRCS))

TARGET := libftasm.a

all: $(TARGET)

clean:
	@echo "Cleaning object files"
	@rm -rf $(BINDIR)

fclean: clean
	@echo "Cleaning binary"
	@rm -f $(TARGET)

re: fclean all

$(TARGET): $(OBJS)
	@echo "LD $@"
	@ar rc $@ $^

$(OBJS): $(BINDIR)/%.o: $(SRCDIR)/%.s
	@mkdir -p $(shell dirname $@)
	@echo "AS $<"
	@nasm -f macho64 -o $@ $<

.PHONY: all clean fclean